@namespace Havit.Blazor.Components.Web.Bootstrap

<CascadingValue Value="@_tabsListRegistration" Name="@TabsRegistrationCascadingValueName" IsFixed="true">
	@ChildContent
</CascadingValue>

@{
	var tabsListOrdered = _tabsList.OrderBy(tab => tab.Order).ToList();
	RenderFragment tabsNavigation =
		@<HxNav CssClass="@CssClassHelper.Combine("hx-tab-panel", GetNavCssClassInCardMode(), CssClass)" Variant="NavVariant">
			@foreach (HxTab tab in tabsListOrdered)
			{
				@if (tab.Visible)
				{
					<HxNavLink @key="@tab.Id"
							   OnClick="async () => await HandleTabClick(tab)"
							   CssClass="@CssClassHelper.Combine((IsActive(tab) ? "active" : null), tab.TitleCssClass)"
							   Enabled="CascadeEnabledComponent.EnabledEffective(tab)">
						@tab.Title
						@tab.TitleTemplate
					</HxNavLink>
				}
			}
		</HxNav>;

	RenderFragment tabsContent =
		@<div class="tab-content">
			@foreach (HxTab tab in tabsListOrdered)
			{
				@if (tab.Visible)
				{
					if ((RenderMode == TabPanelRenderMode.AllTabs)
						|| ((RenderMode == TabPanelRenderMode.ActiveTabOnly) && IsActive(tab)))
					{
						<div @key="@tab.Id" class="@CssClassHelper.Combine("tab-pane", (IsActive(tab) ? "active" : String.Empty), tab.ContentCssClass)">
							@tab.Content
						</div>
					}
				}
			}
		</div>;
}

@if (Variant == TabPanelVariant.Standard)
{
	@tabsNavigation
	@tabsContent
}

@if (Variant == TabPanelVariant.Card)
{
	<HxCard Settings="CardSettings">
		<HeaderTemplate>
			@tabsNavigation
		</HeaderTemplate>
		<BodyTemplate>
			@tabsContent
		</BodyTemplate>
	</HxCard>
}
