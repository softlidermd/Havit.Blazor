@namespace Havit.Blazor.Components.Web.Bootstrap.Internal
@typeparam TItem

@{
    IconBase icon = this.IconSelector?.Invoke(this.Item) ?? null;
    string title = this.TitleSelector?.Invoke(this.Item) ?? null;
    string cssClassFromSelector = this.CssClassSelector?.Invoke(this.Item) ?? null;
    IEnumerable<TItem> children = this.ChildrenSelector(this.Item);
    bool hasChildren = children?.Any() ?? false;
    bool isSelected = this.Item.Equals(this.TreeViewContainer.SelectedItem);
}

<div class="@CssClassHelper.Combine("hx-tree-view-item", isSelected ? "selected" : "", this.CssClass, cssClassFromSelector)" @onclick="@HandleItemClicked" @onclick:stopPropagation="true">
    @for (int i = 0; i < this.Level; i++)
    {
        <div class="hx-tree-view-item-spacer"></div>
    }
    @if (hasChildren)
    {
        <div @onclick:stopPropagation="true">
            <HxCollapseToggleElement ElementName="div" CollapseTarget="@($"#{collapseId}")" CssClass="hx-tree-view-item-expander-container">
                <div class="hx-tree-view-item-expander">
                    <HxIcon Icon="@BootstrapIcon.ChevronRight" />
                </div>
            </HxCollapseToggleElement>
        </div>
    }
    @if (icon != null)
    {
        <div class="hx-tree-view-item-icon">
            <HxIcon Icon="@icon" />
        </div>
    }
    @if (title is not null)
    {
        <div title="@title" class="hx-tree-view-item-title text-nowrap text-truncate">@title</div>
    }
    @if (ContentTemplate is not null)
    {
        @ContentTemplate(this.Item)
    }
</div>

@if (hasChildren)
{
	<HxCollapse Id="@collapseId"
            CollapseDirection="CollapseDirection.Vertical"
            InitiallyExpanded="IsExpanded ?? false"
            OnHidden="() => IsExpanded = false"
            OnShown="() => IsExpanded = true">

        @foreach (var item in children)
        {
            <HxTreeViewItemInternal @key="item"
                            TItem="TItem"
                            Item="item"
                            TitleSelector="this.TitleSelector"
                            IconSelector="this.IconSelector"
                            CssClass="@this.CssClass"
                            CssClassSelector="this.CssClassSelector"
							InitialExpandedSelector="this.InitialExpandedSelector"
							ChildrenSelector="this.ChildrenSelector"
                            Level="@(this.Level + 1)"
                            ContentTemplate="this.ContentTemplate"
                            OnItemSelected="this.OnItemSelected" />
        }

    </HxCollapse>
}
