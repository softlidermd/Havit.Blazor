@namespace Havit.Blazor.Components.Web.Bootstrap

<div class="@CssClassHelper.Combine("hx-sidebar", "flex-grow-0", GetCollapsedCssClass(), CssClass)" id="@Id">
    <div class="nav-menu d-flex flex-column flex-grow-1 position-relative">

        @if (HeaderTemplate is not null)
        {
                <div class="hx-sidebar-header d-flex gap-2 align-items-center">
                    <CascadingValue Value="@(this)">
                    @HeaderTemplate
                    </CascadingValue>
                    <HxButton CssClass="@CssClassHelper.Combine("hx-sidebar-navbar-toggler position-relative", GetResponsiveCssClass("d-??-none"))"
                              data-bs-toggle="collapse"
                              data-bs-target="@($"#{NavContentElementId}")"
                              aria-controls="@NavContentElementId"
                              aria-expanded="false"
                              aria-label="Toggle navigation"
                              Icon="BootstrapIcon.List">
                    @if (ShowNotificationsDot)
                    {
                                <span class="hx-sidebar-notifications-dot bg-danger" />
                    }
                    </HxButton>
                </div>
        }

        <style>
            .sidebar-overlay {
                position: fixed;
                top: 0;
                right: 0;
                bottom: 0;
                left: 0;
                background-color: rgba(0, 0, 0, 0.3);
                z-index: 90000;
                display: none;
            }

            @@media (max-width: 767.98px) {
                .sl-sidebar {
                    position: fixed;
                    z-index: 90001;
                    min-width: 15rem;
                    height: 100vh;
                    height: 100dvh;
                    transform: translateX(-100%); /* Start off-screen to the left */
                    transition: transform 0.3s ease-in-out !important; /* Animate transform only */
                }

                .sl-sidebar.show {
                    transform: translateX(0); /* Slide to visible position */
                }

                    .sl-sidebar.show ~ .sidebar-overlay {
                        display: initial;
                    }
            }
        </style>

        <div class="@CssClassHelper.Combine("sl-sidebar bg-white hx-sidebar-collapse collapse", GetResponsiveCssClass("d-??-flex"), (!Collapsed) ? "overflow-auto": null)" id="@NavContentElementId">
            <div class="hx-sidebar-body mb-auto w-100">
                <HxNav Id="@_navId" Orientation="NavOrientation.Vertical" CssClass="ps-0">
                    <CascadingValue Value="@(this)" IsFixed="true">
                        @ItemsTemplate
                    </CascadingValue>
                </HxNav>
                <div class="@CssClassHelper.Combine(
												"hx-sidebar-toggler",
                                                "z-1",
												Collapsed ? "collapsed" : null,
												GetResponsiveCssClass("d-??-block"))"
                     role="button"
                     @onclick="HandleCollapseToggleClick"
                     @onclick:stopPropagation="true">

                    @if (TogglerTemplate is null)
                    {
                            <HxTooltip Placement="TooltipPlacement.Right" Text="@(Collapsed ? Localizer["Expand"] : Localizer["Collapse"])">
                                <div class="hx-sidebar-toggler-inner">
                                    <div class="hx-sidebar-toggler-arrow"></div>
                                    <div class="hx-sidebar-toggler-arrow"></div>
                                </div>
                            </HxTooltip>
                    }
                    else
                    {
                        @TogglerTemplate(new() { SidebarCollapsed = Collapsed })
                    }
                </div>
            </div>

            @if (FooterTemplate is not null)
            {
                    <div class="hx-sidebar-footer">
                    @FooterTemplate(new() { SidebarCollapsed = Collapsed })
                    </div>
            }
        </div>
        <div class="sidebar-overlay" @onclick="HandleOverlayClick"></div>
    </div>
</div>