@attribute [Route("/components/" + nameof(HxInputDate))]

<ComponentApiDoc Type="typeof(HxInputDate<TValue>)">
	<DocHeading Title="Basic usage" />
	<Demo Type="typeof(HxInputDate_Demo)" Tabs="false" />

    <DocHeading Title="Calendar icon" />
	<p>
        Optional icon can be added using <code>CalendarIcon</code> parameter.<br />
        You can set the icon for all instances of <code>HxInputDate</code> by setting <code>HxInputDate.Defaults.CalendarIcon</code> static property.
    </p>
	<Demo Type="typeof(HxInputDate_Demo_CalendarIcon)" />

    <DocHeading Title="Clear button in calendar" Id="clear-button" />
	<p>The <i>Clear</i> button in dropdown calendar can be hidden by setting <code>ShowClearButton="false"</code>.</p>
	<Demo Type="typeof(HxInputDate_Demo_ClearButton)" />

    <DocHeading Title="Sizes" />
	<Demo Type="typeof(HxInputDate_Demo_InputSize)" />

    <DocHeading Title="Dropdown calendar customization" Id="CalendarCustomization" />
	<p>
		You can change rendering of weekend days by defining your own CSS rule for <code>.weekend</code> class.
		The disabled days get <code>.disabled</code> class.
	</p>
	<DocAlert Type="DocAlertType.Warning">
		Disabling dates with the techniques below won't prevent the user from entering disabled dates manualy. You still have to validate the value.
	</DocAlert>

    <DocHeading Title="MinDate, MaxDate" Level="3" />
	<p>You can limit the dropdown calendar values by setting <code>MinDate</code> and/or <code>MaxDate</code>.</p>
	<Demo Type="typeof(HxInputDate_Demo_MinDateMaxDate)" />

    <DocHeading Title="Calendar date customization" Level="3" />
	<p>
		You can customize the dropdown calendar dates with <code>CalendarDateCustomizationProvider</code>. You can disable individual dates
		(<code>Enabled="false"</code>) or set specific CSS class (<code>CssClass="...")</code>.
	</p>
	<Demo Type="typeof(HxInputDate_Demo_CalendarDateCustomization)" />
</ComponentApiDoc>