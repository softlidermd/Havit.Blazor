@using Microsoft.AspNetCore.Components.Routing
@using Microsoft.JSInterop
@inject NavigationManager NavigationManager
@inject IJSRuntime JSRuntime
@implements IDisposable

@code {
    private IDisposable? _locationChangingHandler;
    private bool _isBrowser;
    private ModalManager modalManager = ModalManager.GetInstance();

    protected override void OnInitialized()
    {
        _isBrowser = OperatingSystem.IsBrowser();
    }

    protected override async Task OnAfterRenderAsync(bool firstRender)
    {
        if (firstRender)
        {
            await modalManager.InitAsync(JSRuntime);
            if (_isBrowser)
            {
                _locationChangingHandler = NavigationManager.RegisterLocationChangingHandler(OnLocationChanging);
            }
        }
    }

    private ValueTask OnLocationChanging(LocationChangingContext context)
    {
        if (modalManager.HasOpenModal)
        {
            context.PreventNavigation();
            modalManager.CloseTop();
        }

        return ValueTask.CompletedTask;
    }

    public void Dispose()
    {
        _locationChangingHandler?.Dispose();
    }
}
