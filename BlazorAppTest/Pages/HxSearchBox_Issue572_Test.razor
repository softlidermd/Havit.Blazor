@page "/HxSearchBox_Issue572_Test"

<h1>HxSearchBox #572</h1>
<p>
	<a href="https://github.com/havit/Havit.Blazor/issues/572">#572 [HxAutosuggest] [HxSearchBox] Initial suggestions disappear when the DataProvider response is quick</a>
</p>


<HxSearchBox TItem="SearchBoxItem"
			 DataProvider="ProvideSearchResults"
			 MinimumLength="0"
			 Label="Search"
			 ItemTitleSelector="(i) => i.Title"
			 @bind-TextQuery="textQuery"
			 ItemSelectionBehavior="SearchBoxItemSelectionBehavior.SelectAndReplaceTextQueryWithItemTitle"
			 OnItemSelected="HandleItemSelected"
			 AllowTextQuery="false">
</HxSearchBox>

<p>selectedItemTitle: @selectedItemTitle</p>
<p>textQuery: @textQuery</p>

@code {
	private string selectedItemTitle = string.Empty;
	private string textQuery = string.Empty;
	private void HandleItemSelected(SearchBoxItem item)
	{
		selectedItemTitle = item.Title;
	}
	List<SearchBoxItem> Data { get; set; } = new()
	{
		new()
		{
			Title = "Table",
			Subtitle = "$5000",
			Icon = BootstrapIcon.Table
		},
		new()
		{
			Title = "Mouse",
			Subtitle = "$40",
			Icon = BootstrapIcon.Mouse
		},
		new()
		{
			Title = "Door",
			Subtitle = "$100",
			Icon = BootstrapIcon.DoorClosed
		}
	};

	Task<SearchBoxDataProviderResult<SearchBoxItem>> ProvideSearchResults(SearchBoxDataProviderRequest request)
	{
		if (request.UserInput?.Length > 0)
		{
			SearchBoxDataProviderResult<SearchBoxItem> result2 = new()
				{
					Data = Data.Where(i => i.Title.Contains(request.UserInput, StringComparison.OrdinalIgnoreCase)).ToArray()
				};
			return Task.FromResult(result2);
		}
		SearchBoxDataProviderResult<SearchBoxItem> result = new()
			{
				Data = Data.Take(10).ToArray()
			};
		return Task.FromResult(result);
	}

	record SearchBoxItem
	{
		public string Title { get; set; }
		public string Subtitle { get; set; }
		public BootstrapIcon Icon { get; set; }
	}
}