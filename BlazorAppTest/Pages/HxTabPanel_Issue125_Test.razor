@page "/HxTabPanel_Issue125_Test"
@using System.Globalization

<HxTabPanel Variant="TabPanelVariant.Card">
    <HxTab Title="Neutral">
        <Content>
            <HxListLayout Title="Neutral cultures" TFilterModel="FilterModelDto">
                <DataTemplate>
                    <HxGrid ContentNavigationMode="GridContentNavigationMode.Pagination" Responsive="true" TItem="CultureInfo" PageSize="10" DataProvider="LoadNeutralCultures">
                        <Columns>
                            <HxGridColumn TItem="CultureInfo" HeaderText="LCID" ItemTextSelector="@(item => item.LCID.ToString())" SortKeySelector="@(item => item.LCID)" IsDefaultSortColumn="true" />
		                    <HxGridColumn TItem="CultureInfo" HeaderText="DisplayName" ItemTextSelector="@(item => item.DisplayName)" SortKeySelector="@(item => item.DisplayName)" />
		                    <HxGridColumn TItem="CultureInfo" HeaderText="Name" ItemTextSelector="@(item => item.Name)" SortKeySelector="@(item => item.Name)"  />
		                    <HxGridColumn TItem="CultureInfo" HeaderText="EnglishName" ItemTextSelector="@(item => item.EnglishName)" SortKeySelector="@(item => item.EnglishName)"  />

                        </Columns>
                    </HxGrid>
                </DataTemplate>
            </HxListLayout>
        </Content>
    </HxTab>
    <HxTab Title="Specific">
        <Content>
            <HxListLayout Title="Specific cultures" TFilterModel="FilterModelDto">
                <DataTemplate>
                    <HxGrid ContentNavigationMode="GridContentNavigationMode.Pagination" TItem="CultureInfo" PageSize="10" DataProvider="LoadSpecificCultures">
                        <Columns>
                            <HxGridColumn TItem="CultureInfo" HeaderText="LCID" ItemTextSelector="@(item => item.LCID.ToString())" SortKeySelector="@(item => item.LCID)" IsDefaultSortColumn="true" />
		                    <HxGridColumn TItem="CultureInfo" HeaderText="DisplayName" ItemTextSelector="@(item => item.DisplayName)" SortKeySelector="@(item => item.DisplayName)" />
		                    <HxGridColumn TItem="CultureInfo" HeaderText="Name" ItemTextSelector="@(item => item.Name)" SortKeySelector="@(item => item.Name)"  />
		                    <HxGridColumn TItem="CultureInfo" HeaderText="EnglishName" ItemTextSelector="@(item => item.EnglishName)" SortKeySelector="@(item => item.EnglishName)"  />

                        </Columns>
                    </HxGrid>
                </DataTemplate>
            </HxListLayout>
        </Content>
    </HxTab>
    <HxTab Title="Installed">
        <Content>
            <HxListLayout Title="Installed cultures" TFilterModel="FilterModelDto">
                <DataTemplate>
                    <HxGrid ContentNavigationMode="GridContentNavigationMode.Pagination" TItem="CultureInfo" PageSize="10" DataProvider="LoadInstalledWin32Cultures">
                        <Columns>
                            <HxGridColumn TItem="CultureInfo" HeaderText="LCID" ItemTextSelector="@(item => item.LCID.ToString())" SortKeySelector="@(item => item.LCID)" IsDefaultSortColumn="true" />
		                    <HxGridColumn TItem="CultureInfo" HeaderText="DisplayName" ItemTextSelector="@(item => item.DisplayName)" SortKeySelector="@(item => item.DisplayName)" />
		                    <HxGridColumn TItem="CultureInfo" HeaderText="Name" ItemTextSelector="@(item => item.Name)" SortKeySelector="@(item => item.Name)"  />
		                    <HxGridColumn TItem="CultureInfo" HeaderText="EnglishName" ItemTextSelector="@(item => item.EnglishName)" SortKeySelector="@(item => item.EnglishName)"  />

                        </Columns>
                    </HxGrid>
                </DataTemplate>
            </HxListLayout>
        </Content>
    </HxTab>
</HxTabPanel>

@code {
    private Task<GridDataProviderResult<CultureInfo>> LoadInstalledWin32Cultures(GridDataProviderRequest<CultureInfo> request)
    {
        IEnumerable<CultureInfo> result = CultureInfo.GetCultures(CultureTypes.InstalledWin32Cultures).ToList();

        return Task.FromResult(request.ApplyTo(result));
    }

    private Task<GridDataProviderResult<CultureInfo>> LoadNeutralCultures(GridDataProviderRequest<CultureInfo> request)
    {
        IEnumerable<CultureInfo> result = CultureInfo.GetCultures(CultureTypes.NeutralCultures).ToList();

        return Task.FromResult(request.ApplyTo(result));
    }

    private Task<GridDataProviderResult<CultureInfo>> LoadSpecificCultures(GridDataProviderRequest<CultureInfo> request)
    {
        IEnumerable<CultureInfo> result = CultureInfo.GetCultures(CultureTypes.SpecificCultures).ToList();

        return Task.FromResult(request.ApplyTo(result));
    }

    public record FilterModelDto { }
}
